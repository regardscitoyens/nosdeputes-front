/// Texte de loi rédigé par des acteurs.
model TexteLoi {
  /// Identifiant unique d'un texte de loi.
  uid                             String        @id @unique
  /// Jeu de données de provenance (numéro de législature)
  dataset                         Int
  /// Titre du texte de loi
  titre                           String
  /// Chambre du texte (Assemblée ou Sénat)
  chambre                         String?
  /// Numéro de législature.
  legislature                     String
  /// Identifiant de la commission associée à ce texte.
  commissionRefUid                String
  /// `true` si la procédure est accélérée ; `false` sinon.
  procedureAcceleree              Boolean       @default(false)
  /// Date de la constitution associée.
  dateConstitution                DateTime?
  /// Date de dépôt à l'Assemblée Nationale
  dateDepot                       DateTime?
  /// Numéro du texte
  numero                          String
  /// Commission chargée du texte de loi.
  commission                      String
  // commission                      Organe        @relation(fields: [commissionRefUid], references: [uid])
  /// Texte de loi présenté au nom de... (e.g. nom du Premier ministre)
  presenteeAuNomDe                Acteur[]      @relation("loisPortees")
  /// Texte de loi présenté par un ensemble de députés.
  presenteePar                    Acteur[]      @relation("loisPresentees")
  /// Signataires de cette loi.
  signataires                     Acteur[]      @relation("loisSignees")
  /// Sommaire du texte de loi.
  sommaire                        SommaireLoi[]
  /// Citation de l'exposé des motifs, si elle existe.
  exposeMotifsCitation            String?
  /// Description des articles de l'exposé des motifs, si elle existe.
  exposeMotifsDescriptionArticles String?
  /// Contenu de l'exposé des motifs comprenant la description des articles.
  exposeMotifsContenu             String?
  /// Liste des articles du texte de loi.
  articles                        Article[]

  @@index([dataset])
  @@index([commissionRefUid])
}

/// Sommaire d'un texte de loi.
model SommaireLoi {
  /// Id unique d'un sommaire d'un texte de loi.
  id Int @id @default(autoincrement())

  /// Jeu de données de provenance (numéro de législature).
  dataset Int

  /// Type de division.
  division DivisionType

  /// Numéro de la division.
  numeroDivision String

  /// Ordre de la division dans le document.
  sequence String

  /// Titre de la division.
  titre String

  /// Identifiant de la division parente.
  parent String?

  /// Identifiant unique de référence du texte de loi associé.
  texteLoiRefUid String

  /// Référence du texte de loi associé.
  texteLoiRef TexteLoi @relation(fields: [texteLoiRefUid], references: [uid])

  @@index([dataset])
  @@index([texteLoiRefUid])
}

enum DivisionType {
  Titre
  Chapitre
  Section
  SousSection
}

/// Article d'un texte de loi.
model Article {
  /// Id unique d'un article.
  id Int @id @default(autoincrement())

  /// Jeu de données de provenance (numéro de législature)
  dataset Int

  /// Hachage de l'objet.
  /// Utilisé comme référence aux alinéas.
  hash String @unique

  /// Liste des alinéas composant l'article.
  alineas Alinea[]

  /// Cardinal de l'article (e.g. er, bis).
  cardinal String?

  /// Mention spécifiée pour certains articles.
  nouveau Boolean @default(false)

  /// Numéro de l'article.
  numero Int?

  /// Numéro des articles (dans de rare cas, il y a un groupement d'articles).
  numeros Int[]

  /// Section parente (e.g. Chapitre Ier BIS).
  parent String?

  /// Rréférence du texte de loi associé à cet article.
  texteLoiRef TexteLoi @relation(fields: [texteLoiRefUid], references: [uid])

  /// Identifiant unique de référence du texte de loi associé à cet article.
  texteLoiRefUid String

  /// Titre de l'article
  titre String

  @@index([dataset])
  @@index([texteLoiRefUid])
}

/// Alinéa d'un texte de loi.
model Alinea {
  /// Id unique d'un alinéa.
  id Int @id @default(autoincrement())

  /// Numéro de l'alinéa.
  numero Int

  /// Jeu de données de provenance (numéro de législature)
  dataset Int

  /// Texte de l'alinéa.
  texte String

  /// Identifiant (string) de référence de l'article parent.
  articleRefHash String

  /// Référence de l'article parent.
  articleRef Article @relation(fields: [articleRefHash], references: [hash])

  @@index([dataset])
  @@index([articleRefHash])
}
