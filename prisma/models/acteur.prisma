/// Personne physique ayant été élue ou nommée dans un organe.
model Acteur {
  /// Identifiant unique.
  uid                          String                       @id
  /// Jeu de données de provenance (numéro de législature)
  dataset                      Int
  /// Prénom.
  prenom                       String
  /// Nom.
  nom                          String
  /// Civilité.                   
  civ                          String
  /// Date de naissance.
  dateNais                     DateTime?
  /// Date de décès.
  dateDeces                    DateTime?
  /// Ville de naissance.
  villeNais                    String?
  /// Département de naissance.
  depNais                      String?
  /// Pays de naissance.
  paysNais                     String?
  /// Profession.
  profession                   String?
  /// Catégorie socio professionelle de l'INSEE.
  catSocPro                    String?
  /// Famille socio professionelle de l'INSEE.
  famSocPro                    String?
  slug                         String
  /// URL de la déclaration d'intérêt de l'acteur sur le site de la Haute Autorité pour la Transparence dans la Vie Publique.
  uriHatvp                     String?
  /// Deputé en poste actuellement.
  actif                        Boolean?                     @default(false)
  /// Groupe parlementaire du député.
  groupeParlementaireUid       String?
  /// Mandat principal du député, c'est à dire s'il est actif ou non.
  mandatPrincipalUid           String?                      @unique
  /// Organe de circonscription
  circonscriptionUid           String?
  /// Identifiant unique de la commission permanente et active de cet acteur.
  commissionPermanenteRefUid   String?
  /// URL de l'image de l'acteur
  urlImage                     String?
  /// Chambre du parlementaire (assemblée ou sénat)
  chambre                      String?
  compteTwitter                String?
  groupeParlementaire          Organe?                      @relation("Acteur_GroupeParlementaire", fields: [groupeParlementaireUid], references: [uid])
  mandatPrincipal              Mandat?                      @relation("Acteur_MandatPrincipal", fields: [mandatPrincipalUid], references: [uid])
  circonscription              Organe?                      @relation("Acteur_Circonscription", fields: [circonscriptionUid], references: [uid])
  /// Commission permanente et active de cet acteur.
  commissionPermanente         Organe?                      @relation(fields: [commissionPermanenteRefUid], references: [uid])
  /// Fonction de cet acteur au sein de sa commission permanente.
  fonctionCommissionPermanente String?
  auteurActeLegislatif         ActeLegislatif[]             @relation("ActeLegislatif_auteurMotion")
  reunionsDemandees            ActeurDemandeur[]
  adressesElectroniques        AdresseElectronique[]
  adressesPostales             AdressePostale[]
  amendements                  Amendement[]
  coSignataireAmendement       CoSignataireAmendement[]
  auteurs                      Auteur[]
  auteursMotion                AuteurMotion[]
  coSignataireDocument         CoSignataireDocument[]
  documents                    Document[]
  dysfonctionnements           Dysfonctionnement[]
  initiateurActeLegislatif     InitiateurActeLegislatif[]
  initiateurDossiers           InitiateurDossier[]
  mandats                      Mandat[]                     @relation("Mandat_Acteur")
  collaborateurs               Collaborateur[]
  votes                        Vote[]
  misesAuPoint                 MiseAuPoint[]
  reunions                     ParticipantReunion[]
  auditionsReunions            PersonneAuditionneeReunion[]
  questions                    Question[]
  rapporteurs                  Rapporteur[]
  suppletions                  Suppleant[]
  interventions                Paragraphe[]
  /// Les dossiers de cet acteur.
  dossiers                     Dossier[]
  vecteurRecherche             Unsupported("tsvector")?     @default(dbgenerated("to_tsvector('french'::regconfig, ((immutable_unaccent((COALESCE(prenom, ''::text))::character varying) || ' '::text) || immutable_unaccent((COALESCE(nom, ''::text))::character varying)))"))

  /// Nombre d'amendements pour cet acteur.
  nombreAmendements Int @default(0)

  /// Nombre d'interventions pour cet acteur.
  nombreInterventions Int @default(0)

  /// Nombre de questions pour cet acteur.
  nombreQuestions Int @default(0)

  /// Lois présentées au nom de cet acteur (e.g. un premier ministre).
  loisPortees    TexteLoi[] @relation("loisPortees")
  /// Lois présentées par cet acteur.
  loisPresentees TexteLoi[] @relation("loisPresentees")
  /// Lois signées par cet acteur.
  loisSignees    TexteLoi[] @relation("loisSignees")

  @@index([dataset])
  @@index([vecteurRecherche], type: Gin)
  @@index([actif])
  @@index([groupeParlementaireUid])
  @@index([mandatPrincipalUid])
  @@index([circonscriptionUid])
  @@index([slug])
  @@index([commissionPermanenteRefUid])
}

model AdresseElectronique {
  /// Identifiant unique.
  uid                   String  @id
  /// Jeu de données de provenance (numéro de législature)
  dataset               Int
  type                  String
  typeLibelle           String
  poids                 String?
  adresseDeRattachement String?
  valElec               String?
  xsiType               String?
  acteurRefUid          String
  acteurRef             Acteur  @relation(fields: [acteurRefUid], references: [uid], onDelete: Cascade)

  @@index([dataset])
  @@index([acteurRefUid])
}

model AdressePostale {
  /// Identifiant unique.
  uid               String  @id
  /// Jeu de données de provenance (numéro de législature)
  dataset           Int
  type              String
  typeLibelle       String
  poids             String?
  intitule          String?
  numeroRue         String?
  nomRue            String?
  complementAdresse String?
  codePostal        String?
  ville             String?
  xsiType           String?
  acteurRefUid      String
  acteurRef         Acteur  @relation(fields: [acteurRefUid], references: [uid], onDelete: Cascade)

  @@index([dataset])
  @@index([acteurRefUid])
}
