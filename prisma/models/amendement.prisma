model Amendement {
  /// Identifiant unique.
  uid                              String    @id
  /// Jeu de données de provenance (numéro de législature)
  dataset                          Int
  /// Chambre de provenance (Assemblée ou Sénat)
  chambre                          String?
  chronotag                        String?
  /// Numéro de la législature sous laquelle a été créé l'amendement. Nombre entier.
  legislature                      String?
  /// Libelle désignant l'amendement et incluant son numéro (correspondant au champ numero), une indication du nombre de rectifications qui lui ont été apportés (correspondant au champ identifiant.numRect et d'autres informations dérivées du champ identifiant.
  numeroLong                       String?
  numeroOrdreDepot                 Int?
  prefixeOrganeExamen              String?
  numeroRect                       Int?
  examenRef                        String?
  /// Lorsque tous les amendements visant un texte de loi sont triés sur cette clé, cela détermine leur ordre d'appel.
  triAmendement                    String?
  /// Le contenu de ce champ n'est pas défini.
  cardinaliteAmdtMultiples         Int?
  /// L'identifiant unique (uid) de l'amendement modifié par un sous amendement. Les amendements peuvent faire l’objet de sous-amendements qui doivent respecter les mêmes règles formelles que les amendements.
  amendementParentRefUid           String?
  /// 'Depute' si l'auteur dépose l'amendement en sa qualité de député, 'Gouvernement' s'il le fait au nom du gouvernement, 'Rapporteur' s'il est le rapporteur de la commission désignée par organeRef.
  typeAuteur                       String?
  gouvernementOrganeRefUid         String?
  /// Identifiant unique (uid) de l'auteur de l'amendement.
  acteurRefUid                     String?
  /// Identifiant unique (uid) du groupe politique auquel est affilié l'auteur.
  groupePolitiqueRefUid            String?
  /// Identifiant unique (uid) de la commission dont l'auteur est le rapporteur.
  auteurRapporteurOrganeRefUid     String?
  /// Les noms de l'auteur et des co-signataires de l'amendement.
  signatairesSufixe                String?
  signatairesLibelle               String?
  divisionTitre                    String?
  divisionArticleDesignationCourte String?
  divisionArticleDesignation       String?
  divisionType                     String?
  divisionAvantAApres              String?
  /// Chapeau de l'amendement, décrivant précisément l'emplacement du texte modifié par l'amendement et l'action (modifier, supprimer, insérer).
  divisionRattachee                String?
  divisionArticleAdditionnel       String?
  divisionChapitreAdditionnel      String?
  /// URL du texte sur http://www.assemblee-nationale.fr, y compris le fragment qui désigne la division visée par l'amendement, tel que décrite dans le champ divisionRattachee.
  urlDivisionTexteVise             String?
  /// Avant: un ajout avant l'alinéa numero, Après: un ajout avant après l'alinéa numero, A: une modification ou suppression de l'alinéa numero et suivants le cas échéant.
  alineaAvantAApres                String?
  /// Numéro de l'alinéa. Pour le calcul des alinéas au sein d'un amendement sous-amendé, le chapeau de l’amendement est décompté comme un alinéa.
  alineaNumero                     String?
  /// Texte complémentaire qui est ajouté au chapeau de l'amendement (qui se trouve dans le champ divisionRattachee) et qui précise éventuellement l'emplacement de l'alinéa visé par l'amendement.
  alineaDesignation                String?
  codeEtat                         String?
  codeMissionMinefi                String?
  libelleMission                   String?
  missionRef                       String?
  cartoucheInformatif              String?
  /// Description exhaustive des modifications apportées au texte original.
  dispositif                       String?
  /// Exposé sommaire des motifs justifiant l'amendement.
  exposeSommaire                   String?
  /// Contenu originel du champ dispositif dans le cas ou un amendement est modifié avant qu'il soit appelé.
  dispositifAvantAppel             String?
  creditPLFSoldeAE                 String?
  creditPLFSoldeCP                 String?
  creditPLFCpEgalAe                String?
  totalAeSupplementaire            String?
  totalAeAnnule                    String?
  totalAeSolde                     String?
  totalCpSupplementaire            String?
  totalCpAnnule                    String?
  totalCpSolde                     String?
  creditPLFRCpEgalAe               String?
  listeProgrammesPLFR              Json?
  listeProgrammesPLF               Json?
  /// Date de dépôt.
  dateDepot                        DateTime?
  /// Date de publication.
  datePublication                  DateTime?
  soumisArticle40                  String?
  etatCode                         String?
  etatLibelle                      String?
  sousEtatCode                     String?
  sousEtatLibelle                  String?
  dateSort                         DateTime?
  sortAmendement                   String?
  nomRepresentation                String?
  typeMimeType                     String?
  typeMimeSubType                  String?
  canonique                        Boolean?
  enregistrement                   Boolean?
  officielle                       Boolean?
  transcription                    Boolean?
  verbatim                         Boolean?
  /// Chemin de l'amendement qui permet de composer son URL sur ce modèle: http://www.assemblee-nationale.fr/documentURI.
  documentURI                      String?
  /// Identifiant unique (uid) de la séance durant laquelle l'amendement a été discuté.
  seanceRefUid                     String?
  /// Amendement déposé par le rapporteur d'une commission ou le gouvernement, après le délai imposé aux députés, en application de l'alinéa 2 de l'article 99 du règlement de l'assemblée nationale.
  article99                        String?
  codeLoi                          String?
  divisionCodeLoi                  String?
  idDiscussionCommune              Int?
  typePositionCommune              String?
  idDiscussionIdentique            Int?
  typePositionIdentique            String?
  accordGouvernementDepotHorsDelai String?
  /// Exposé sommaire des motifs justifiant l'amendement, au format HTML.
  exposeSommaireHtml               String?
  /// Description exhaustive des modifications apportées au texte original, au format HTML.
  dispositifHtml                   String?
  /// Nombre de co-signataires
  nombreCoSignataires              Int       @default(0)
  /// Identifiant du dossier de loi lié à l'amendement
  dossierRefUid                    String?
  /// Identifiant unique du texte législatif (document) visé par l'amendement.
  texteLegislatifRefUid            String?
  /// Identifiant du scrutin lié à l'amendement
  scrutinRefUid                    String?   @unique

  vecteurRecherche Unsupported("tsvector")? @default(dbgenerated("to_tsvector('french'::regconfig, ((((immutable_unaccent((COALESCE(dispositif, ''::text))::character varying) || ' '::text) || immutable_unaccent((COALESCE(\"exposeSommaire\", ''::text))::character varying)) || ' '::text) || immutable_unaccent((COALESCE(\"divisionArticleDesignationCourte\", ''::text))::character varying)))"))

  texteLegislatifRef        Document?                @relation(fields: [texteLegislatifRefUid], references: [uid])
  dossierRef                Dossier?                 @relation(fields: [dossierRefUid], references: [uid])
  acteurRef                 Acteur?                  @relation(fields: [acteurRefUid], references: [uid])
  scrutinRef                Scrutin?                 @relation(fields: [scrutinRefUid], references: [uid])
  amendementParentRef       Amendement?              @relation("amendementParentRef", fields: [amendementParentRefUid], references: [uid], onDelete: Restrict, onUpdate: Restrict)
  sousAmendements           Amendement[]             @relation("amendementParentRef")
  auteurRapporteurOrganeRef Organe?                  @relation("Amendement_Organe", fields: [auteurRapporteurOrganeRefUid], references: [uid])
  gouvernementOrganeRef     Organe?                  @relation("Amendement_Gouvernement", fields: [gouvernementOrganeRefUid], references: [uid])
  groupePolitiqueRef        Organe?                  @relation("Amendement_GroupePolitique", fields: [groupePolitiqueRefUid], references: [uid])
  seanceRef                 Agenda?                  @relation(fields: [seanceRefUid], references: [uid])
  coSignataires             CoSignataireAmendement[]

  @@index([dataset])
  @@index([vecteurRecherche], type: Gin)
  @@index([acteurRefUid])
  @@index([seanceRefUid])
  @@index([scrutinRefUid])
  @@index([dossierRefUid])
  @@index([texteLegislatifRefUid])
  @@index([amendementParentRefUid])
  @@index([auteurRapporteurOrganeRefUid])
  @@index([gouvernementOrganeRefUid])
  @@index([groupePolitiqueRefUid])
  @@index([dateDepot])
}

model CoSignataireAmendement {
  /// Identifiant unique.
  id               Int     @id @default(autoincrement())
  /// Jeu de données de provenance (numéro de législature)
  dataset          Int
  /// Identifiants uniques (uid) des acteurs.
  acteurRefUid     String?
  amendementRefUid String?

  acteurRef     Acteur?     @relation(fields: [acteurRefUid], references: [uid])
  amendementRef Amendement? @relation(fields: [amendementRefUid], references: [uid], onDelete: Restrict, onUpdate: Restrict)

  @@index([dataset])
  @@index([acteurRefUid])
  @@index([amendementRefUid])
}
